package com.hatchgrid.thryve.newsletter.subscriber.infrastructure.persistence.entity

import com.hatchgrid.common.domain.AuditableEntity
import com.hatchgrid.thryve.newsletter.subscriber.domain.Attributes
import com.hatchgrid.thryve.newsletter.subscriber.domain.SubscriberStatus
import java.time.LocalDateTime
import java.util.*
import org.springframework.data.annotation.CreatedBy
import org.springframework.data.annotation.CreatedDate
import org.springframework.data.annotation.LastModifiedBy
import org.springframework.data.annotation.LastModifiedDate
import org.springframework.data.relational.core.mapping.Column
import org.springframework.data.relational.core.mapping.Table

@Table("subscribers")
data class SubscriberEntity(
    // id is generated by the frontend and sent to the backend as a UUID
    val id: UUID,
    val email: String,
    val firstname: String? = null,
    var lastname: String? = null,
    @Column("status")
    var status: SubscriberStatus,
    @Column("attributes")
    val attributes: Attributes? = Attributes(),
    val workspaceId: UUID,
    @CreatedBy
    @Column("created_by")
    override val createdBy: String = "system",

    @CreatedDate
    @Column("created_at")
    override val createdAt: LocalDateTime,

    @LastModifiedBy
    @Column("updated_by")
    override var updatedBy: String? = null,

    @LastModifiedDate
    @Column("updated_at")
    override var updatedAt: LocalDateTime? = null
) : AuditableEntity(createdAt, createdBy,updatedAt, updatedBy)
