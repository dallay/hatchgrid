name: Frontend CI

on:
  push:
    branches: [ main ]
    paths:
      - 'client/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - '.github/workflows/frontend-ci.yml'
      - '.github/actions/setup-node/**'
  pull_request:
    paths:
      - 'client/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
      - 'pnpm-workspace.yaml'
      - '.github/workflows/frontend-ci.yml'
      - '.github/actions/setup-node/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint:
    name: Lint with eslint # Updated job name
    runs-on: ubuntu-latest
    # Permissions are inherited from workflow level: contents: read, checks: write, pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node

      - name: Install reviewdog
        run: |
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b /usr/local/bin/

      - name: Run eslint with reviewdog
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Install eslint-formatter-rdjson if not already a project dependency
          if ! pnpm list eslint-formatter-rdjson --depth -1 --json | grep -q '"name": "eslint-formatter-rdjson"'; then
            pnpm add --save-dev eslint-formatter-rdjson
          fi
          pnpm eslint --format rdjson client/**/*.{js,jsx,ts,tsx} | reviewdog -f=rdjson -name="eslint" -reporter="github-pr-check" -level="warning" --filter-mode=nofilter

  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node

      - name: Build
        run: pnpm build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-artifacts
          path: |
            client/apps/*/dist/
            client/landing-page/dist/
          retention-days: 7

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js and pnpm
        uses: ./.github/actions/setup-node

      - name: Test
        run: pnpm test

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info # Adjust path if necessary, common for JS projects
          # flags: frontend # Optional
          # name: codecov-frontend # Optional
          # fail_ci_if_error: true # Optional
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
